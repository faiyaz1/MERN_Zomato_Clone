[{"/Users/faiyaz/Desktop/Zomato/frontend/src/index.js":"1","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Router.js":"2","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Home.js":"3","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Header.js":"4","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Filter.js":"5","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Details.js":"6","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Wallpaper.js":"7","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/QuickSearch.js":"8","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/QuickSearchItem.js":"9"},{"size":240,"mtime":1607841844000,"results":"10","hashOfConfig":"11"},{"size":533,"mtime":1609311468000,"results":"12","hashOfConfig":"11"},{"size":1277,"mtime":1608967062000,"results":"13","hashOfConfig":"11"},{"size":2888,"mtime":1609315858000,"results":"14","hashOfConfig":"11"},{"size":13919,"mtime":1609061226000,"results":"15","hashOfConfig":"11"},{"size":12434,"mtime":1609319750000,"results":"16","hashOfConfig":"11"},{"size":3417,"mtime":1609058400000,"results":"17","hashOfConfig":"11"},{"size":963,"mtime":1607851632000,"results":"18","hashOfConfig":"11"},{"size":1310,"mtime":1608966056000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ibfc9e",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/faiyaz/Desktop/Zomato/frontend/src/index.js",[],["43","44"],"/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Router.js",[],"/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Home.js",[],"/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Header.js",[],"/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Filter.js",["45","46","47","48","49","50","51"],"import React from 'react';\r\nimport '../Styles/Filter.css';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\n\r\nclass Filter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations: [],\r\n            location_id: undefined,\r\n            mealtype_id: undefined,\r\n            cuisine_id: [],\r\n            hcost: undefined,\r\n            lcost: undefined,\r\n            sort: 1,\r\n            page: 1,\r\n            pages: []\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const location_id = queryParams.area;\r\n        const hcost = queryParams.costlessthan;\r\n        const lcost = queryParams.costmorethan;\r\n        const sort = queryParams.sort;\r\n        const page = queryParams.page;\r\n\r\n\r\n        // Filter API Call \r\n\r\n        const filterObj = {\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id: cuisine_id,\r\n            location_id: location_id,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:6503/api/restaurantfilter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, pages: response.data.pageCount, location_id: location_id, mealtype_id: mealtype_id })\r\n        }).catch(error => console.log(error))\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:6503/api/cityList',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ locations: response.data.city })\r\n        }).catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    handleClick = (Id) => {\r\n        this.props.history.push(`/details/?restaurant=${Id}`);\r\n    }\r\n\r\n    handleSortChange = (sort) => {\r\n        const { mealtype_id, location_id, cuisine_id, hcost, lcost, page } = this.state;\r\n\r\n        const filterObj = {\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id: cuisine_id,\r\n            location_id: location_id,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:6503/api/restaurantfilter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, pages: response.data.pageCount, sort: sort })\r\n        }).catch(error => console.log(error))\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealtype_id}&cuisine=${cuisine_id}&area=${location_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}&page=${page}`)\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        const { mealtype_id, location_id, cuisine_id, page, sort } = this.state;\r\n\r\n        const filterObj = {\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id: cuisine_id,\r\n            location_id: location_id,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealtype_id}&cuisine=${cuisine_id}&area=${location_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}&page=${page}`)\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:6503/api/restaurantfilter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, pages: response.data.pageCount, lcost: lcost, hcost: hcost })\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        const { mealtype_id, location_id, cuisine_id, sort, lcost, hcost } = this.state;\r\n\r\n        const filterObj = {\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id: cuisine_id,\r\n            location_id: location_id,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealtype_id}&cuisine=${cuisine_id}&area=${location_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}&page=${page}`)\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:6503/api/restaurantfilter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, pages: response.data.pageCount, lcost: lcost, hcost: hcost })\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n\r\n        const { mealtype_id, location_id, cuisine_id, sort, lcost, hcost, page } = this.state;\r\n\r\n        if (cuisine_id.indexOf(cuisineId) == -1) {\r\n            cuisine_id.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine_id.indexOf(cuisineId);\r\n            cuisine_id.splice(index, 1);\r\n        }\r\n\r\n        const filterObj = {\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id: cuisine_id,\r\n            location_id: location_id,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        }\r\n\r\n        this.props.history.push(`/filter/?mealtype=${mealtype_id}&cuisine=${cuisine_id}&area=${location_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}&page=${page}`)\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:6503/api/restaurantfilter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        }).then(response => {\r\n            this.setState({ restaurants: response.data.restaurant, pages: response.data.pageCount, lcost: lcost, hcost: hcost })\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        const { restaurants, locations, pages } = this.state;\r\n        return (\r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filterComp\">Breakfast Places in Mumbai</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4 col-md-4 col-lg-4 filter-options\">\r\n                            <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                data-target=\"#demo\"></span>\r\n                            <div id=\"demo\" className=\"collapse show\">\r\n                                <div className=\"filter-heading\">Filters</div>\r\n                                <div className=\"Select-Location\">Select Location</div>\r\n                                <select className=\"Rectangle-2236\">\r\n                                    <option>Select</option>\r\n                                    {locations.map((item) => {\r\n                                        return <option value={item.location_id}>{`${item.name}, ${item.city}`}</option>\r\n                                    })}\r\n                                </select>\r\n                                <div className=\"Cuisine\">Cuisine</div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={() => this.handleCuisineChange(1)} />\r\n                                    <span className=\"checkbox-items\">North Indian</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                    <span className=\"checkbox-items\">South Indian</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                    <span className=\"checkbox-items\">Chineese</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                    <span className=\"checkbox-items\">Fast Food</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                    <span className=\"checkbox-items\">Street Food</span>\r\n                                </div>\r\n                                <div className=\"Cuisine\">Cost For Two</div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                    < span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                    <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                    <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                    <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                    <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                    <span className=\"checkbox-items\">All</span>\r\n                                </div>\r\n                                <div className=\"Cuisine\">Sort</div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"sort\" onChange={() => this.handleSortChange(1)} />\r\n                                    <span className=\"checkbox-items\">Price low to high</span>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"radio\" name=\"sort\" onChange={() => this.handleSortChange(-1)} />\r\n                                    <span className=\"checkbox-items\">Price high to low</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                            {restaurants.length == 0 ? <div className=\"no-item\">No Items Found... </div> : restaurants.map((item) => {\r\n                                return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                    <div className=\"row pl-1\">\r\n                                        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                            <img className=\"img\" src={`../${item.image}`} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                            <div className=\"rest-name\">{item.name}</div>\r\n                                            <div className=\"res-location\">FORT</div>\r\n                                            <div className=\"rest-address\">Shop 1, Plot D, Samruddhi Complex, Chincholi …</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row padding-left\">\r\n                                        <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                            <div className=\"rest-address\">CUISINES : Bakery</div>\r\n                                            <div className=\"rest-address\">COST FOR TWO : &#8377; {item.min_price} </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                            {restaurants.length == 0 ? null :\r\n                                <div className=\"pagination\">\r\n                                    <a >&laquo;</a>\r\n                                    {pages.map((item) => {\r\n                                        return <a onClick={() => this.handlePageChange(item)}>{item}</a>\r\n                                    })}\r\n                                    <a>&raquo;</a>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Details.js",["52","53","54","55","56","57","58"],"import React from 'react';\r\nimport '../Styles/Details.css';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        'z-index': '5 !important'\r\n    }\r\n};\r\n\r\nclass Details extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restuarant: {},\r\n            itemModalIsOpen: false,\r\n            formModalIsOpen: false,\r\n            galleryModalIsOpen: false,\r\n            restaurantId: undefined,\r\n            items: [],\r\n            subTotal: 0,\r\n            name: '',\r\n            contactNumber: '',\r\n            address: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const restuarantId = queryParams.restaurant;\r\n\r\n        // API Call \r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:6503/api/getResById/${restuarantId}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ restuarant: response.data.restaurant, restaurantId: restuarantId })\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    handleOrder = () => {\r\n        const { restaurantId } = this.state;\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:6503/api/getItemsbyrestaurant/${restaurantId}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            this.setState({ items: response.data.itemsList, itemModalIsOpen: true })\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    addItems = (index, operationType) => {\r\n        let total = 0;\r\n        const items = [...this.state.items];\r\n        const item = items[index];\r\n\r\n        if (operationType == 'add') {\r\n            item.qty = item.qty + 1;\r\n        }\r\n        else {\r\n            item.qty = item.qty - 1;\r\n        }\r\n        items[index] = item;\r\n        items.map((item) => {\r\n            total += item.qty * item.price;\r\n        })\r\n        this.setState({ items: items, subTotal: total });\r\n    }\r\n\r\n    handlePay = () => {\r\n        this.setState({ itemModalIsOpen: false, formModalIsOpen: true })\r\n    }\r\n\r\n    handleModalClose = (state) => {\r\n        this.setState({ [state]: false });\r\n    }\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const { name, contactNumber, address } = this.state;\r\n        if (name && contactNumber && address) {\r\n            const obj = {\r\n                name: name,\r\n                contactNumber: contactNumber,\r\n                address: address\r\n            };\r\n            // Payment API Call\r\n        }\r\n        else {\r\n            alert('All are mandatory feilds, plz fill them');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleGallery = () => {\r\n        this.setState({ galleryModalIsOpen: true });\r\n    }\r\n\r\n    isDate(val) {\r\n        // Cross realm comptatible\r\n        return Object.prototype.toString.call(val) === '[object Date]'\r\n    }\r\n\r\n    isObj = (val) => {\r\n        return typeof val === 'object'\r\n    }\r\n\r\n    stringifyValue = (val) => {\r\n        if (this.isObj(val) && !this.isDate(val)) {\r\n            return JSON.stringify(val)\r\n        } else {\r\n            return val\r\n        }\r\n    }\r\n\r\n    buildForm = ({ action, params }) => {\r\n        const form = document.createElement('form')\r\n        form.setAttribute('method', 'post')\r\n        form.setAttribute('action', action)\r\n\r\n        Object.keys(params).forEach(key => {\r\n            const input = document.createElement('input')\r\n            input.setAttribute('type', 'hidden')\r\n            input.setAttribute('name', key)\r\n            input.setAttribute('value', this.stringifyValue(params[key]))\r\n            form.appendChild(input)\r\n        })\r\n\r\n        return form\r\n    }\r\n\r\n    post = (details) => {\r\n        const form = this.buildForm(details)\r\n        document.body.appendChild(form)\r\n        form.submit()\r\n        form.remove()\r\n    }\r\n\r\n    getData = (data) => {\r\n\r\n        return fetch(`http://localhost:6503/api/payment`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json()).catch(err => console.log(err))\r\n    }\r\n\r\n    makePayment = (e) => {\r\n        const { subTotal } = this.state;\r\n        this.getData({ amount: subTotal, email: 'abc@gmail.com' }).then(response => {\r\n            var information = {\r\n                action: \"https://securegw-stage.paytm.in/order/process\",\r\n                params: response\r\n            }\r\n            this.post(information);\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const { restuarant, itemModalIsOpen, items, subTotal, formModalIsOpen, name, address, contactNumber, galleryModalIsOpen } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <img src={`../${restuarant && restuarant.thumb && restuarant.thumb[0]}`} alt=\"No Image, Sorry for the Inconvinience\" width=\"100%\" height=\"400\" />\r\n                    <button className=\"button\" onClick={this.handleGallery}>Click to see Image Gallery</button>\r\n                </div>\r\n                <div className=\"heading\">{restuarant.name}</div>\r\n                <button style={{ float: 'right' }} onClick={this.handleOrder} className=\"btn btn-danger\">Place Online Order</button>\r\n                <div className=\"tabs\">\r\n                    <div className=\"tab\">\r\n                        <input type=\"radio\" id=\"tab-1\" name=\"tab-group-1\" checked />\r\n                        <label for=\"tab-1\">Overview</label>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"about\">About this place</div>\r\n                            <div className=\"head\">Cuisine</div>\r\n                            <div className=\"value\">{restuarant.cuisine ? restuarant.cuisine.map((item) => item.name + ' ,') : null}</div>\r\n                            <div className=\"head\">Average Cost</div>\r\n                            <div className=\"value\">&#8377; {restuarant.min_price} for two people(approx)</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tab\">\r\n                        <input type=\"radio\" id=\"tab-2\" name=\"tab-group-1\" />\r\n                        <label for=\"tab-2\">Contact</label>\r\n                        <div className=\"content\">\r\n                            <div className=\"head\">Phone Number</div>\r\n                            <div className=\"value\">{restuarant.contact_number}</div>\r\n                            <div className=\"head\">{restuarant.name}</div>\r\n                            <div className=\"value\">{`${restuarant.locality}, ${restuarant.city}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    isOpen={itemModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div >\r\n                        <div className=\"glyphicon glyphicon-remove lose\" style={{ float: 'right' }} onClick={() => this.handleModalClose('itemModalIsOpen')}></div>\r\n                        <h3 className=\"restaurant-name\">{restuarant.name}</h3>\r\n                        <h3>SubTotal : {subTotal}</h3>\r\n                        <button className=\"btn btn-danger\" onClick={this.handlePay}> Pay Now</button>\r\n                        {items.map((item, index) => {\r\n                            return <div style={{ width: '44rem', marginTop: '10px', marginBottom: '10px', borderBottom: '2px solid #dbd8d8' }}>\r\n                                <div className=\"card\" style={{ width: '43rem', margin: 'auto' }}>\r\n                                    <div className=\"row\" style={{ paddingLeft: '10px', paddingBottom: '10px' }}>\r\n                                        <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \" style={{ paddingLeft: '10px', paddingBottom: '10px' }}>\r\n                                            <span className=\"card-body\">\r\n                                                <h5 className=\"item-name\">{item.name}</h5>\r\n                                                <h5 className=\"item-name\">&#8377;{item.price}</h5>\r\n                                                <p className=\"card-text\">{item.description}</p>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\"> <img className=\"card-img-center title-img\" src=\"../Assets/breakfast.jpg\" style={{ height: '75px', width: '75px', 'border-radius': '20px' }} />\r\n                                            {item.qty == 0 ? <div><button className=\"add-button\" onClick={() => this.addItems(index, 'add')}>Add</button></div> :\r\n                                                <div className=\"add-number\"><button onClick={() => this.addItems(index, 'subtract')}>-</button><span style={{ backgroundColor: 'white' }}>{item.qty}</span><button onClick={() => this.addItems(index, 'add')}>+</button></div>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                        <div className=\"card\" style={{ width: '44rem', marginTop: '10px', marginBottom: '10px', margin: 'auto' }}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={formModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div>\r\n                        <div className=\"glyphicon glyphicon-remove lose\" style={{ float: 'right' }} onClick={() => this.handleModalClose('formModalIsOpen')}></div>\r\n                        <form onSubmit={this.makePayment}>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>Name</td>\r\n                                    <td><input type=\"text\" value={name} onChange={(event) => this.handleChange(event, 'name')} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Conatct Number</td>\r\n                                    <td><input type=\"text\" value={contactNumber} onChange={(event) => this.handleChange(event, 'contactNumber')} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Address</td>\r\n                                    <td><input type=\"text\" value={address} onChange={(event) => this.handleChange(event, 'address')} /></td>\r\n                                </tr>\r\n                            </table>\r\n                            <input type=\"submit\" className=\"btn btn-danger\" value=\"Proceed\" />\r\n                        </form>\r\n                    </div>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={galleryModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div className=\"glyphicon glyphicon-remove lose\" style={{ float: 'right' }} onClick={() => this.handleModalClose('galleryModalIsOpen')}></div>\r\n                    <Carousel\r\n                        showIndicators={false}\r\n                        showThumbs={false}\r\n                    >\r\n                        {restuarant ? restuarant.thumb && restuarant.thumb.map((item) => {\r\n                            return <div>\r\n                                <img src={`../${item}`} />\r\n                            </div>\r\n                        }) : null}\r\n                    </Carousel>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Details;","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/Wallpaper.js",["59"],"import React from 'react';\r\nimport '../Styles/Wallpaper.css';\r\nimport homeImg from '../Assets/homepageimg.png';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Wallpaper extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            text: '',\r\n            suggestions: []\r\n        }\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        const locationId = event.target.value;\r\n        sessionStorage.setItem('locationId', locationId);\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:6503/api/getRestaurantsbycity/${locationId}`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => this.setState({ restaurants: res.data.restaurantList }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        const { restaurants } = this.state;\r\n        let suggestions = [];\r\n\r\n        if (value.length > 0) {\r\n            suggestions = restaurants.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n        }\r\n        this.setState(() => ({\r\n            suggestions: suggestions,\r\n            text: value\r\n        }))\r\n    }\r\n\r\n    selectedText = (itemObj) => {\r\n        this.setState({\r\n            text: itemObj.name,\r\n            suggestions: [],\r\n        }, () => {\r\n            this.props.history.push(`/details/?restaurant=${itemObj._id}`);\r\n        })\r\n    }\r\n\r\n    renderSuggestions = () => {\r\n        const { suggestions } = this.state;\r\n\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul >\r\n                {\r\n                    suggestions.map((item, index) => (<li key={index} onClick={() => this.selectedText(item)}>{`${item.name}, ${item.city}`}</li>))\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { locations, text } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <img src={homeImg} style={{ width: '100%', height: '450px' }} />\r\n                <div>\r\n                    <div className=\"logo\">\r\n                        <p>e!</p>\r\n                    </div>\r\n                    <div className=\"headings\">\r\n                        Find the best restaurants, cafes, bars\r\n                </div>\r\n                    <div className=\"locationSelector\">\r\n                        <select className=\"locationDropdown\" onChange={this.handleLocationChange}>\r\n                            <option value=\"0\">Select</option>\r\n                            {locations.map(item => {\r\n                                return <option value={item.location_id}>{`${item.name}, ${item.city}`}</option>\r\n                            })}\r\n                        </select>\r\n                        <div id=\"notebooks\">\r\n                            <input id=\"query\" className=\"restaurantsinput\" type=\"text\" placeholder=\"Please Enter Restaurant Name\" value={text} onChange={this.handleInputChange} />\r\n                            {this.renderSuggestions()}\r\n                        </div>\r\n                        <span className=\"glyphicon glyphicon-search search\"></span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Wallpaper);","/Users/faiyaz/Desktop/Zomato/frontend/src/Components/QuickSearch.js",[],"/Users/faiyaz/Desktop/Zomato/frontend/src/Components/QuickSearchItem.js",["60"],"import React from 'react';\r\nimport '../Styles/QuickSearch.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass QuickSearchItem extends React.Component {\r\n    handleClick = (Id) => {\r\n        const locationId = sessionStorage.getItem('locationId');\r\n        if (locationId) {\r\n            this.props.history.push(`/filter/?mealtype=${Id}&area=${locationId}`);\r\n        }\r\n        else {\r\n            this.props.history.push(`/filter/?mealtype=${Id}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, name, content, image } = this.props;\r\n        return (\r\n            <div class=\"col-sm-12 col-md-12 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n                <div class=\"tileContainer\">\r\n                    <div class=\"tileComponent1\">\r\n                        <img src={`../${image}`} height=\"150\" width=\"140\" />\r\n                    </div>\r\n                    <div class=\"tileComponent2\">\r\n                        <div class=\"componentHeading\">\r\n                            {name}\r\n                        </div>\r\n                        <div class=\"componentSubHeading\">\r\n                            {content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(QuickSearchItem);",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":153,"column":43,"nodeType":"67","messageId":"68","endLine":153,"endColumn":45},{"ruleId":"65","severity":1,"message":"66","line":260,"column":49,"nodeType":"67","messageId":"68","endLine":260,"endColumn":51},{"ruleId":"69","severity":1,"message":"70","line":264,"column":45,"nodeType":"71","endLine":264,"endColumn":93},{"ruleId":"65","severity":1,"message":"66","line":281,"column":49,"nodeType":"67","messageId":"68","endLine":281,"endColumn":51},{"ruleId":"72","severity":1,"message":"73","line":283,"column":37,"nodeType":"71","endLine":283,"endColumn":41},{"ruleId":"72","severity":1,"message":"73","line":285,"column":48,"nodeType":"71","endLine":285,"endColumn":95},{"ruleId":"72","severity":1,"message":"73","line":287,"column":37,"nodeType":"71","endLine":287,"endColumn":40},{"ruleId":"65","severity":1,"message":"66","line":71,"column":27,"nodeType":"67","messageId":"68","endLine":71,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":78,"column":26,"nodeType":"76","messageId":"77","endLine":78,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":99,"column":19,"nodeType":"80","messageId":"81","endLine":99,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":185,"column":21,"nodeType":"71","endLine":185,"endColumn":166},{"ruleId":"69","severity":1,"message":"70","line":235,"column":95,"nodeType":"71","endLine":235,"endColumn":237},{"ruleId":"65","severity":1,"message":"66","line":236,"column":55,"nodeType":"67","messageId":"68","endLine":236,"endColumn":57},{"ruleId":"69","severity":1,"message":"70","line":285,"column":33,"nodeType":"71","endLine":285,"endColumn":59},{"ruleId":"69","severity":1,"message":"70","line":71,"column":17,"nodeType":"71","endLine":71,"endColumn":81},{"ruleId":"69","severity":1,"message":"70","line":22,"column":25,"nodeType":"71","endLine":22,"endColumn":77},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'obj' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]